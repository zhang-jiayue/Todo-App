{"ast":null,"code":"var _jsxFileName = \"/Users/jiayue/Desktop/js/To-Do-App/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport PropTypes from 'prop-types'; // Use a capital letter as the start of a custom component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  increment(by) {\n    // update state - counter++\n    this.setState(prevState => {\n      return {\n        counter: prevState.counter + by\n      }; // + this.props.by, // merge with the current state\n    }); // passing an object to setState()\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(CounterButton, {\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 5,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 10,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        style: {\n          fontSize: '50px',\n          FontFace: 'fantasy'\n        },\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CounterButton extends Component {\n  // Define the initial state in a constructor\n  //state => counter 0\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  increment() {\n    // update state - counter++\n    this.setState({\n      counter: this.state.counter + this.props.by // merge with the current state\n\n    }); // passing an object to setState()\n\n    this.props.incrementMethod(this.props.by);\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"names":["React","Component","PropTypes","Counter","constructor","state","counter","increment","bind","by","setState","prevState","render","fontSize","FontFace","CounterButton","props","incrementMethod","defaultProps","propTypes","number"],"sources":["/Users/jiayue/Desktop/js/To-Do-App/frontend/todo-app/src/components/counter/Counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './Counter.css';\nimport PropTypes from 'prop-types';\n// Use a capital letter as the start of a custom component\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n    };\n    this.increment = this.increment.bind(this);\n  }\n  increment(by) {\n    // update state - counter++\n    this.setState((prevState) => {\n      return { counter: prevState.counter + by }; // + this.props.by, // merge with the current state\n    }); // passing an object to setState()\n  }\n  render() {\n    return (\n      <div className=\"counter\">\n        <CounterButton incrementMethod={this.increment} />\n        <CounterButton by={5} incrementMethod={this.increment} />\n        <CounterButton by={10} incrementMethod={this.increment} />\n        <span\n          className=\"count\"\n          style={{ fontSize: '50px', FontFace: 'fantasy' }}\n        >\n          {this.state.counter}\n        </span>\n      </div>\n    );\n  }\n}\nclass CounterButton extends Component {\n  // Define the initial state in a constructor\n  //state => counter 0\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n    };\n    this.increment = this.increment.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"Counter\">\n        <button onClick={this.increment}>+{this.props.by}</button>\n        <button onClick={this.increment}>+{this.props.by}</button>\n\n        {/*<span\n          className=\"count\"\n          style={{ fontSize: '50px', FontFace: 'fantasy' }}\n        >\n          {this.state.counter}\n        </span>*/}\n      </div>\n    );\n  }\n  increment() {\n    // update state - counter++\n    this.setState({\n      counter: this.state.counter + this.props.by, // merge with the current state\n    }); // passing an object to setState()\n    this.props.incrementMethod(this.props.by);\n  }\n}\nCounterButton.defaultProps = {\n  by: 1,\n};\n\nCounterButton.propTypes = {\n  by: PropTypes.number,\n};\nexport default Counter;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;;;AACA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;EAC9BG,WAAW,GAAG;IACZ;IACA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAE;IADE,CAAb;IAGA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACD;;EACDD,SAAS,CAACE,EAAD,EAAK;IACZ;IACA,KAAKC,QAAL,CAAeC,SAAD,IAAe;MAC3B,OAAO;QAAEL,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoBG;MAA/B,CAAP,CAD2B,CACiB;IAC7C,CAFD,EAFY,CAIR;EACL;;EACDG,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE,QAAC,aAAD;QAAe,eAAe,EAAE,KAAKL;MAArC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,aAAD;QAAe,EAAE,EAAE,CAAnB;QAAsB,eAAe,EAAE,KAAKA;MAA5C;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,aAAD;QAAe,EAAE,EAAE,EAAnB;QAAuB,eAAe,EAAE,KAAKA;MAA7C;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QACE,SAAS,EAAC,OADZ;QAEE,KAAK,EAAE;UAAEM,QAAQ,EAAE,MAAZ;UAAoBC,QAAQ,EAAE;QAA9B,CAFT;QAAA,UAIG,KAAKT,KAAL,CAAWC;MAJd;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;AA5B6B;;AA8BhC,MAAMS,aAAN,SAA4Bd,SAA5B,CAAsC;EACpC;EACA;EACAG,WAAW,GAAG;IACZ;IACA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAE;IADE,CAAb;IAGA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACD;;EACDI,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAQ,OAAO,EAAE,KAAKL,SAAtB;QAAA,gBAAmC,KAAKS,KAAL,CAAWP,EAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAE,KAAKF,SAAtB;QAAA,gBAAmC,KAAKS,KAAL,CAAWP,EAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;EACDF,SAAS,GAAG;IACV;IACA,KAAKG,QAAL,CAAc;MACZJ,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKU,KAAL,CAAWP,EAD7B,CACiC;;IADjC,CAAd,EAFU,CAIN;;IACJ,KAAKO,KAAL,CAAWC,eAAX,CAA2B,KAAKD,KAAL,CAAWP,EAAtC;EACD;;AA/BmC;;AAiCtCM,aAAa,CAACG,YAAd,GAA6B;EAC3BT,EAAE,EAAE;AADuB,CAA7B;AAIAM,aAAa,CAACI,SAAd,GAA0B;EACxBV,EAAE,EAAEP,SAAS,CAACkB;AADU,CAA1B;AAGA,eAAejB,OAAf"},"metadata":{},"sourceType":"module"}