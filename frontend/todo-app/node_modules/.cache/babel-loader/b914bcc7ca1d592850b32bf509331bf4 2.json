{"ast":null,"code":"var _jsxFileName = \"/Users/jiayue/Desktop/js/To-Do-App/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css'; // Use a capital letter as the start of a custom component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  // Define the initial state in a constructor\n  //state => counter 0\n  constructor(props) {\n    super();\n    this.props = props;\n    this.state = {\n      counter: 0,\n      secondCounter: 100\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        style: {\n          fontSize: '50px',\n          FontFace: 'fantasy'\n        },\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  increment() {\n    // update state - counter++\n    this.setState({\n      counter: this.state.counter + this.props.by // merge with the current state\n\n    }); // passing an object to setState()\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","constructor","props","state","counter","secondCounter","increment","bind","render","by","fontSize","FontFace","setState"],"sources":["/Users/jiayue/Desktop/js/To-Do-App/frontend/todo-app/src/components/counter/Counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './Counter.css';\n// Use a capital letter as the start of a custom component\nclass Counter extends Component {\n  // Define the initial state in a constructor\n  //state => counter 0\n  constructor(props) {\n    super();\n    this.props = props;\n    this.state = {\n      counter: 0,\n      secondCounter: 100,\n    };\n    this.increment = this.increment.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"Counter\">\n        <button onClick={this.increment}>+{this.props.by}</button>\n        <span\n          className=\"count\"\n          style={{ fontSize: '50px', FontFace: 'fantasy' }}\n        >\n          {this.state.counter}\n        </span>\n      </div>\n    );\n  }\n  increment() {\n    // update state - counter++\n    this.setState({\n      counter: this.state.counter + this.props.by, // merge with the current state\n    }); // passing an object to setState()\n  }\n}\n\nexport default Counter;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP,C,CACA;;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC9B;EACA;EACAE,WAAW,CAACC,KAAD,EAAQ;IACjB;IACA,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAE,CADE;MAEXC,aAAa,EAAE;IAFJ,CAAb;IAIA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACD;;EACDC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAQ,OAAO,EAAE,KAAKF,SAAtB;QAAA,gBAAmC,KAAKJ,KAAL,CAAWO,EAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,SAAS,EAAC,OADZ;QAEE,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAZ;UAAoBC,QAAQ,EAAE;QAA9B,CAFT;QAAA,UAIG,KAAKR,KAAL,CAAWC;MAJd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;EACDE,SAAS,GAAG;IACV;IACA,KAAKM,QAAL,CAAc;MACZR,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKF,KAAL,CAAWO,EAD7B,CACiC;;IADjC,CAAd,EAFU,CAIN;EACL;;AA9B6B;;AAiChC,eAAeT,OAAf"},"metadata":{},"sourceType":"module"}